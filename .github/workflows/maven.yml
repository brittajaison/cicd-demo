# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package
    
      - name: Create Package
        run: |
          mkdir stage 
          cp target/*.jar stage

      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: stage

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Test with Maven
        run: mvn -B test

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  
  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code for vulnerabilities
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        id: snyk
        uses: snyk/actions/maven-3-jdk-17@master
        continue-on-error: true # To make sure that SARIF upload gets called
        
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        with:
          args: --sarif

      - name: Debugging Info
        run: |
          echo "Current Directory: $(pwd)"
          echo "Contents of Current Directory: $(ls -la)"
          echo "Snyk Output Path: $(echo snyk-output*.sarif)"
          echo ${{ secrets.SNYK_TOKEN }}

      - name: Save SARIF results
        run: |
          echo "SARIF contents:"
          cat snyk-output.sarif
          echo "End of SARIF contents."

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-output.sarif
